name: Deploy

on:
  push:
    branches: [main, master]
  workflow_dispatch:

jobs:
  # Deploy Smart Contracts (manual trigger only)
  deploy-contracts:
    name: Deploy Smart Contracts
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci
        working-directory: ./contracts

      - name: Compile contracts
        run: npm run compile
        working-directory: ./contracts

      - name: Deploy to testnet
        run: npm run deploy:testnet
        working-directory: ./contracts
        env:
          DEPLOYER_PRIVATE_KEY: ${{ secrets.DEPLOYER_PRIVATE_KEY }}
          RPC_URL: ${{ secrets.ATTELYX_TESTNET_RPC_URL }}

      - name: Upload deployment artifacts
        uses: actions/upload-artifact@v3
        with:
          name: contract-deployments
          path: contracts/deployments

  # Deploy Backend
  deploy-backend:
    name: Deploy Backend
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy to Railway
        uses: bervProject/railway-deploy@main
        with:
          railway_token: ${{ secrets.RAILWAY_TOKEN }}
          service: backend
        continue-on-error: true

      - name: Success message
        run: echo "✅ Backend deployment initiated"

  # Deploy Frontend
  deploy-frontend:
    name: Deploy Frontend
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install Vercel CLI
        run: npm install -g vercel

      - name: Pull Vercel Environment
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
        working-directory: ./frontend

      - name: Build Project
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
        working-directory: ./frontend

      - name: Deploy to Vercel
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}
        working-directory: ./frontend

      - name: Success message
        run: echo "✅ Frontend deployed to Vercel"
